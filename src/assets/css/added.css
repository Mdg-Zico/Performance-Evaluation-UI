:root {
    --error-color: #dc3545;
}

/* General styles for the form */
.form, .form-goal {
    box-shadow: 0 4px 8px rgba(0,0,0,0.02), 0 6px 20px rgba(0,0,0,0.03);
    padding: 40px;
    padding-top: 10px;
    background: #fff;
    border-radius: 8px;
    margin-bottom: -20px;
    margin-top: -10px;
   
}
#create-session-form{
    margin-bottom: 40px;
}

.first-div, .second-div {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
}

/* Standard full width for three field rows */
.form-group {
    flex: 1 1 calc(33.333% - 27px); /* Adjusted for 40px gap */
    margin-bottom: 20px;
}

/* Adjusted width for two field rows */
.form-group.half-width {
    flex: 1 1 calc(50% - 20px); /* Adjusted for 40px gap */
}

.form-control.select-dropdown {
    appearance: none; /* Removes default system appearance */
    -webkit-appearance: none; /* Specifically for Chrome, Safari */
    -moz-appearance: none; /* Specifically for Firefox */
    background-image: url('data:image/svg+xml;charset=US-ASCII,%3Csvg width="14" height="14" xmlns="http://www.w3.org/2000/svg"%3E%3Cg%3E%3Cpath d="M4 5l3 3 3-3" stroke="%230056b3" stroke-width="2" fill="none" stroke-linecap="round" stroke-linejoin="round"/%3E%3C/g%3E%3C/svg%3E');
    background-position: right 10px center; /* Position the image to the right and center it vertically */
    background-repeat: no-repeat; /* Prevents the image from repeating */
    background-size: 12px 12px; /* Size of the dropdown arrow */
    cursor: pointer; /* Changes the cursor to indicate it's clickable */
    margin-top: 0px;
}

.form-control {
    width: 100%; /* Make form controls expand to the full width of their parent .form-group */
    padding: 10px;
    height: 40px; /* Uniform height for all input fields */
    box-sizing: border-box; /* Include padding and border in the width calculation */
    margin-bottom: 15px; /* Margin below each form control */
}


.required {
    color: var(--error-color);
}

.default {
    color: grey;
}

#spinner {
  display: none;
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 1000;
}

.spinner-circle {
  width: 120px; /* Adjust size of the spinner container */
  height: 120px; /* Adjust size of the spinner container */
  position: relative;
  text-align: center;
}

.spinner-border {
  width: 80px; /* Adjust the size of the spinner */
  height: 80px; /* Adjust the size of the spinner */
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: -20px; /* Half of the spinner's height */
  margin-left: -20px; /* Half of the spinner's width */
  border: 4px solid #f3f3f3;
  border-top: 4px solid blue;
  border-radius: 50%;

  animation: spin 1s linear infinite; /* Animation details */
}

.spinner-text {
  position: absolute;
  top: 65%;
  left: 70%;
  transform: translate(-50%, -50%);
  z-index: 10;
  color: #4f73d9;
  font-size: 0.8em; /* Adjust font size as needed */
  font-weight: bold;
  text-align: center;
  max-width: 100%; /* Ensure text doesn't exceed spinner's width */
}



/* Alert close button styling */
.alert {
    position: relative; /* Ensure we can position the close button absolutely within */
    padding-right: 50px; /* Provide enough padding to not overlap text with the close button */
}

.alert .close {
    position: absolute; /* Position absolutely within the alert */
    right: 0; /* At the extreme right */
    top: 0; /* Align to the top */
    padding: 0.75rem 1.25rem; /* Same as alert padding for vertical alignment */
    color: inherit; /* Inherits the alert's text color */
    text-shadow: none; /* Remove any text shadow */
    opacity: 1; /* Make sure it's fully visible */
    line-height: 1.5; /* Adjust to match the alert's line height */
}

.alert .close span {
    font-size: 1.5rem; /* Adjust the size as needed */
    line-height: 1; /* Ensure the icon is vertically centered */
}




.alert-success {
    color: #155724; /* Bootstrap success color, change as per your theme */
    background-color: #d4edda;
    border-color: #c3e6cb;
}
.alert-eror{
    color: #573515; /* Bootstrap success color, change as per your theme */
    background-color: #d4edda;
    border-color: #c3e6cb;  
}
.alert-dismissible .close {
    outline: none;
    border: none;
    background: none; /* Remove default background */
}

.alert .close:hover {
    opacity: 1;
    cursor: pointer;
}
.start_date, .end_date, .session{
    width: 40px;
}
.action{
    width: 150px;
}
/* General button styling */
.btn-delete {
    background-color: #ff4444;
    color: white;
    border: none;
    margin-left: 20px;
    padding: 6px 12px; /* Ensure consistent padding */
    display: inline-flex;
    align-items: center;
    font-size: 10px; /* Ensure consistent font size */
  }
  .btn-delete:hover {
    background-color:red;
    color: white;
    
  }
  .btn-update {
   
    border: none;
    margin-left: 20px;
    padding: 6px 12px; /* Ensure consistent padding */
    display: inline-flex;
    align-items: center;
    font-size: 10px; /* Ensure consistent font size */
  }
  
  /* Icon styling */
  .icon {
    max-height: 16px; /* Adjust this value to fit the button */
    vertical-align: middle;
    margin-left: -1px;
 
  }
  
  /* Optional: Adjust button padding to better fit icons and text */
  
  /* Ensuring each column takes exactly 20% of the container width */
.col-custom {
    flex: 0 0 20%; /* do not grow or shrink, start at 20% width */
    max-width: 20%; /* maximum width of 20% */
    padding: 0 15px; /* spacing between cards */
}

.card {
    margin-bottom: 20px; /* space below each card */
}

.card-img-top {

    height: 15px; /* maintain aspect ratio */
    margin-left: -75px;
    margin-top: 3px;
    color: blue;

    
}

.card-body {
    padding: 15px; /* padding inside the card */
}
/* Add hover effect */
.card-hover:hover {
  transform: scale(1.08); /* Increase size on hover */
  transition: transform 0.3s ease; /* Smooth transition */
  cursor: pointer; /* Change cursor to pointer on hover */
  box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.5); /* Increase the spread radius */
}


/* Optional: Add responsiveness to stack cards on smaller screens */
@media (max-width: 768px) {
  .col-custom {
    flex: 0 0 50%; /* stack two per row on small devices */
    max-width: 50%;
  }
}

@media (max-width: 576px) {
  .col-custom {
    flex: 0 0 100%; /* stack one per row on extra small devices */
    max-width: 100%;
  }
}

.head-content{
    display: flex; /* Enables flexbox layout model */
    align-items: center; /* Aligns items vertically in the center */
    gap: 20px; /* Optional: Adds space between the image and the heading */
    margin-bottom: 10px;
}

.side-image {
    width: 30px; /* Adjust size as needed */
    height: auto; /* Maintains aspect ratio */
    margin-right: 0;
    object-fit: cover; /* Ensures the image covers the area without being stretched */
    
}
.card-head{
    margin-top: 25px;
    font-size: 17px;
    color: black;
    margin-left: -15px;
}

.card-text{
  font-size: 0.7rem;
}
.small-button {
  font-size: 0.6rem; /* Adjust the font size to make it smaller */
  font-weight: 700;
  align-items: center;
  display: inline-flex;
}
.small-button:hover{
  background-color:#5D87FF;
}
.btn-outline-info{
  margin-left: 30px;
}

/* Style search dropdown */
.search-dropdown {
    height: fit-content;
    overflow-y: scroll;
}

.search-dropdown > li {
    transition-duration: 500;
    padding: 0.5rem;
}
.search-dropdown > li:hover {
    background-color: #c3e6cb;
}
#goalModal .modal-content {
    border-top-left-radius: 0.5rem; 
    border-top-right-radius: 0.5rem; 
    border-bottom-left-radius: 0.5rem; 
    border-bottom-right-radius: 0.5rem; 
  }
  
  #goalModal .modal-header {
    border-top-left-radius: 0.5rem; 
    border-top-right-radius: 0.5rem; 
  }
  #sessionModal .modal-content {
    border-top-left-radius: 0.5rem; 
    border-top-right-radius: 0.5rem; 
    border-bottom-left-radius: 0.5rem; 
    border-bottom-right-radius: 0.5rem; 
  }
  
  #sessionModal .modal-header {
    border-top-left-radius: 0.5rem; 
    border-top-right-radius: 0.5rem; 
  }
  #sessionModal .modal-dialog {
    max-width: 800px; /* Adjust width */
    height: auto; /* Adjust height if necessary */
  }
